@page
@using Web.Pages.Classes
@model Web.Pages.WriterModel
@{
    ViewData["Title"] = "Writer";
    ViewData["ActivePage"] = BreadCrumbs.Writer;
}

@section Scripts{
<script src="https://kit.fontawesome.com/a45e1612b0.js" crossorigin="anonymous"></script>
<script>
    // jquery get element by class named footer
    var footer = $('footer');
    // jquery get element by class named footer and change position to relative
    footer.css('position', 'relative');

</script>
}

<figure>
    <blockquote>
        <p>
            I am a Writer, I love to use big words in my write-ups, like utilizing gargantuan expressions for simple
            idioms.
        </p>
    </blockquote>
</figure>

<!-- create a blog post -->
<div class="blog-container">
    <div class="row">
        <div class="col-md-9 mt-3 mb-3">
            <div class="row mt-1 g-4">

                @{
                    foreach (var blog in Model.BlogPosts)
                    {
                        <div class="col-md-4">
                            <a asp-page="/BlogPost" asp-route-id="@blog.Id">
                                <div class="card p-2 mb-5">
                                    <div class="card-body">
                                        <div class="card-title">

                                            <i class="fa-solid fa-up-right-from-square"></i>
                                            <div class="row h-25 pt-3">
                                                <span class="col-6 text-break text-wrap text-sm-start">@Extend.GetConvertedDate(@blog.CreatedOn, false)</span>
                                                <span class="col-6 cutLongWord text-sm-end">@blog.CreatedBy</span>
                                            </div>
                                            
                                            <h6 class="card-subtitle mb-2 mt-4 fs-4">@blog.Title</h6>
                                            <p class="fs-6 card-text font-monospace text-break text-wrap cutLongWord mt-2">@blog.Description</p>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }

            </div>

        </div>


        <div class="col-md-3">
            <div class="popular-section">
                <div class="createWriterSection">
                    <a asp-page="/CreatePost"> Create Post </a>
                </div>
                <h6 class="fs-2">Recent Posts</h6>
                <div class="btnRecent">

                    @{
                        if (Model.BlogPosts.Any())
                        {

                            foreach (var blog in Model.BlogPosts)
                            {
                                <a asp-page="/BlogPost" asp-route-id="@blog.Id">@blog.Title</a>
                            }
                        }
                    }

                </div>

                @if (Model.IsTobiKareem)
                {
                    <div class="createWriterSection">
                        <a asp-page="/CreateCategory"> Create Category </a>
                    </div>
                }

                <h6 class="fs-2">Categories</h6>
                <div class="btnRecent">

                    @{
                        var hasSet = new HashSet<string>();

                        for (var i = 0; i < Model.BlogPosts.Count(); i++)
                        {
                            var category = @Model.BlogPosts[i].Category.Category1;
                            if (hasSet.Contains(category))
                            {
                                continue;
                            }
                            hasSet.Add(category);

                            <a href="/">@category</a>
                        }
                    }
                </div>

            </div>
        </div>
    </div>

</div>
